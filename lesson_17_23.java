public class lesson_17_23 {
    //Переход от класса Date к классу Calendar

    //Программисты любили класс Date за его простоту и поддержку стандартов Unix, но, как известно,
    //наши недостатки — это продолжение наших достоинств.
    //Программисты хотели иметь «умный класс Date». И такой класс появился: им стал класс Calendar.
    //Он задумывался как инструмент не только хранения, но и сложной работы с датами.
    //Полное имя класса Calendar — java.util.Calendar. Не забывайте добавлять его в import, если решите использовать в своем коде.

    //Создать объект Calendar можно командой:
    //Calendar date = Calendar.getInstance();

    //Статический метод getInstance() класса Calendar создаст объект Calendar, инициализированный текущей датой.
    //В зависимости от настроек компьютера, на котором выполняется программа, будет создан нужный календарь.
    //Более правильно было бы сказать — актуальный. Дело в том, что на Земле не один, а много календарей.
    //И почти каждый из них связан с какой-нибудь религией или страной. Класс Calendar поддерживает 3 из них:
    //Календарь	                Описание
    //GregorianCalendar	        Христианский Григорианский календарь
    //BuddhistCalendar	        Буддистский календарь
    //JapaneseImperialCalendar	Японский Императорский календарь

    //Создание объекта календарь
    //Мы будем использовать Григорианский календарь как самый распространенный в мире.
    //Объект календарь с произвольной датой создается командой:
    //Calendar date = new GregorianCalendar(год, месяц, день);
    //Да, каждый раз придется писать GregorianCalendar.
    //Можно и вместо Calendar писать GregorianCalendar: так тоже будет работать. Но просто Calendar писать короче.
    //Год нужно писать полностью: никаких 19 вместо 2019. Месяцы по-прежнему нумеруются с нуля.
    //А дни месяца по-прежнему нумеруются не с нуля.

    //Чтобы задать не только дату, но и время, нужно передать их дополнительными параметрами:
    //var dateAndTime = new GregorianCalendar(год, месяц, день, часы, минуты, секунды);
    //Можно даже передать миллисекунды, если это необходимо: их указывают следующим параметром после секунд.
}
