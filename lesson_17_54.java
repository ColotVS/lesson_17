import java.time.ZoneId;

public class lesson_17_54 {
    //Класс ZonedDateTime

    //Есть еще один очень интересный класс в Date Time API — класс ZonedDateTime.
    //Основное его назначение — удобно работать с датами в разных часовых поясах.

    //LocalDate отлично подходит для описания дат.
    //Например, дня рождения: у меня день рождения 15 марта независимо от того, где я нахожусь. Это пример даты.

    //LocalTime отлично подходит для описания времени, например, будильника: я завел будильник на 5 утра и все равно, где я нахожусь.
    //5 утра — это 5 утра. Это пример работы с временем.

    //А теперь допустим, что мы пишем приложение, которое бронирует авиабилеты.
    //Самолеты взлетают и прилетают по местному времени, самолет летит фиксированное время, но часовые пояса меняются.
    //Кстати, с временными зонами (часовыми поясами) в мире настоящий бардак. Более того, если вы думаете, что часовых поясов 24, вы сильно ошибаетесь.
    //Например, время в Индии отличается от Гринвича на 5 c половиной часов: GMT+5:30. Одни страны переходят на летнее время, другие нет.
    //Причем разные страны переходят на летнее время в разное время года.

    //В общем, в мире есть временные зоны, внутри каждой зоны одно время.
    //Время в разных зонах может совпадать в определенные периоды года, а в другие периоды отличаться.
    //Зоны обычно называют по крупным городам, находящимся в них: Europe/Monaco, Asia/Singapore, хотя бывают и исключения — US/Pacific.
    //Всего в настоящий момент официально известно 599 временных зон.

    //Для хранения временной зоны в Java используется класс ZoneId из пакета java.time.
    //Кстати, у него есть статический метод getAvailableZoneIds(),
    //который возвращает множество всех известных на текущий момент временных зон.
    //Чтобы получить список всех зон, нужно написать такой код:
    public static void main(String[] args) {
        for (String s: ZoneId.getAvailableZoneIds())
            System.out.println(s);
        //Чтобы получить объект ZoneId по его имени, нужно воспользоваться статическим методом of();
        ZoneId zone = ZoneId.of("Africa/Cairo");
    }
}
