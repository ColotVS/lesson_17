import java.util.Calendar;
import java.util.GregorianCalendar;

public class lesson_17_27 {
    //Изменение даты в объекте Calendar
    //У класса Calendar есть метод, который позволяет проводить с датой более умные операции.
    //Например, добавить к дате год, месяц или несколько дней. Или отнять.
    //Называется этот метод add().
    //Выглядит работа с ним примерно так:

    //calendar.add(Calendar.MONTH, значение);
    //Где calendar — это переменная типа Calendar, а MONTH — это переменная-константа класса Calendar.
    //В метод add в качестве первого параметра вы передаете специальную константу класса Calendar,
    //и в качестве второго параметра — значение, которое нужно добавить.

    //Особенность этого метода в том, что он умный. Давайте сами посмотрим, насколько:

    public static void main(String[] args) {
        Calendar calendar = new GregorianCalendar(2019, Calendar.FEBRUARY, 27);
        calendar.add(Calendar.DAY_OF_MONTH, 2);
        System.out.println(calendar.getTime());                 //Fri Mar 01 00:00:00 EET 2019

        //Этот метод понимает, что в феврале 2019 года всего 28 дней, и итоговая дата — 1 марта.
        //А теперь давайте отнимем 2 месяца! Что должно получиться? 27 декабря 2018 года! Сейчас проверим.
        //Чтобы выполнить действие, уменьшающее дату, нужно в метод add() передать значение с отрицательным знаком:
        calendar.add(Calendar.DAY_OF_MONTH, -2);
        calendar.add(Calendar.MONTH, -2);
        System.out.println(calendar.getTime());                 //Thu Dec 27 00:00:00 GMT+07:00 2018

        //Этот метод учитывает длины месяцев и високосные годы. В общем, отличный метод.
        //Именно то, что нужно большинству программистов, которые плотно работают с датами.
    }

}
